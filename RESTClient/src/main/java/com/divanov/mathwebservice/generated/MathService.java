package com.divanov.mathwebservice.generated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.3
<<<<<<< HEAD:RESTClient/src/main/java/com/divanov/mathwebservice/generated/MathService.java
 * 2023-02-27T22:19:30.674+03:00
=======
 * 2023-02-21T20:51:50.468+03:00
>>>>>>> fc3d050d9d5a7fa00c535335ff69abfa8e297c78:RESTClient/src/main/java/com/divanov/mathwebservice/dto/MathService.java
 * Generated source version: 3.5.3
 *
 */
@WebServiceClient(name = "MathService",
                  wsdlLocation = "http://localhost:8080/services/MathService.wsdl",
                  targetNamespace = "http://math.ws.divanov")
public class MathService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://math.ws.divanov", "MathService");
    public final static QName MathPortSoap11 = new QName("http://math.ws.divanov", "MathPortSoap11");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/services/MathService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MathService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/services/MathService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MathService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MathService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MathService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public MathService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public MathService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MathService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns MathPort
     */
    @WebEndpoint(name = "MathPortSoap11")
    public MathPort getMathPortSoap11() {
        return super.getPort(MathPortSoap11, MathPort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MathPort
     */
    @WebEndpoint(name = "MathPortSoap11")
    public MathPort getMathPortSoap11(WebServiceFeature... features) {
        return super.getPort(MathPortSoap11, MathPort.class, features);
    }

}
